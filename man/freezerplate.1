.TH FREEZERPLATE 1 "February 2025" "0.1" "FreezerPlate ü•∂ü•è Manual"
.SH NAME
freezerplate \- Template generator CLI

.SH SYNOPSIS
.B freezerplate
.I source_directory
.I destination_directory
.BR [-f | --force]
.I [filename]

.SH DESCRIPTION
.B freezerplate
is a command-line tool for generating portable templates. The source directory is where the source data is located, which may be organized in a recursive directory structure. The generated code will be emitted to the specified destination directory.

The filename provided is an environment file written in XML format, following specific specifications that will be detailed later. If the filename is not provided, the program will prompt the user to enter its content.

.SH XML FILE SYNTAX
The XML file should follow the structure below:

.EX
<project name="example-templ" version="1.0.0" author="herodev" repo="https://example.com/project.git" lbrace="&lt;?" rbrace="?&gt;">
    <description>Simple description of the application injected in its README.md</description>
    <licence mnemonic="GPL2.0">Only used if a mnemonic is not provided (or in case it is unknown)</licence>
</project>
.EE

The attributes and elements are as follows:
.TP
.B name
The name of the project (required).
.TP
.B version
The version of the project (optional).
.TP
.B author
The author of the project (optional).
.TP
.B repo
The URL of the project's repository (optional).
.TP
.B lbrace
The left brace character for template syntax (optional, defaults to `<?`).
.TP
.B rbrace
The right brace character for template syntax (optional, defaults to `?>`).
.TP
.B description
A brief description of the application (optional).
.TP
.B licence
The license under which the project is distributed (optional). If a mnemonic is not provided, this field text is used.

Additionally, if provided, the program can automatically include two optional files:
.TP
.B body.frag.cpp
A fragment file that can contain additional code to be included in the body of the generated output.
.TP
.B head.frag.cpp
A fragment file that can contain additional code to be included in the header of the generated output.

.SH OPTIONS
.TP
.BI -f , --force
Enables the override flag. When this option is specified, existing files in the destination directory will be overwritten if they already exist.

.SH ARGUMENTS
.TP
.I source_directory
The path to the directory containing the template files. This directory may contain subdirectories with additional templates.

.TP
.I destination_directory
The path to the directory where the generated code will be saved. This directory will be created if it does not exist.

.TP
.I filename
The name of the environment file in XML format. If this argument is omitted, the program will prompt the user to enter the file content.

.SH EXAMPLES
.TP
.B freezerplate /path/to/source /path/to/destination -f environment.xml
Generates code from templates located in `/path/to/source`, saves the output to `/path/to/destination`, and overwrites any existing files.

.TP
.B freezerplate /path/to/source /path/to/destination environment.xml
Generates code from templates located in `/path/to/source`, saves the output to `/path/to/destination`, and uses `environment.xml` as the filename.

.TP
.B freezerplate /path/to/source /path/to/destination
Prompts the user to enter the environment file content after generating code from templates.

.SH AUTHOR
Written by karurochari.

.SH REPORTING BUGS
Report bugs to <https://github.com/KaruroChori/freezerplate/issues>.

.SH COPYRIGHT
Copyright (C) 2025 karurochari. CC Attribution-NoDerivatives 4.0 International.
